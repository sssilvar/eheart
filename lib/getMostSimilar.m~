function [ most_similar_image ] = getMostSimilar( target )
%GETMOSTSIMILAR Looks for the most similar image in a dataset
%   Based on the Normalized Cross Correlation metrix

clc % DELETE THIS LINE
%% Define params
addpath('jsonlab-1.5', 'nii');
params = loadjson('params.json');
f = filesep;
current_dir = fileparts(mfilename('fullpath'));

% Check if csv_data path is empty in json file
if isempty(params.csv_data)
    csv_data = [current_dir, f, 'dataset.csv'];
else
    csv_data = params.csv_data;
end

%% Start Processing!
% Load the target
mri_target = MRIread(target);

% Load the subjects' ID (folder names)
subjects = table2array(readtable(csv_data));

% Initialize the similarity vector
% and a cell that contains the whole number of images
ncc_vec = [];

for i = 1:length(subjects)
    % Define subject path
    subject_dir = [params.dataset_folder, f, subjects{i}];
    disp(['Processing subject: ', subjects{i}])
    
    % Get images inside folder: frames
    frames = getFramesfromFolderG2(subject_dir, 'frame', params.extension);
    for j = 1:length(frames)
        if ~any(strfind(frames{j}, 'gt')) % Avoid segmentation files
            file_vol = [subject_dir, f, frames{j}];
            
            % Read volume
            mri = MRIread(file_vol);
            ncc(j) = nccdecV(mri.vol, mri_target.vol);
        end
    end
end

disp(ncc_vec)

